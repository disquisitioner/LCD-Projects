
/*
 * Software SPI to match my use of the Sparkfun Nokia 5110 LCD
 * https://learn.sparkfun.com/tutorials/graphic-lcd-hookup-guide
 * Software SPI is slower but gives you much more flexibility in
 * selecting pins to use.
 *
 * Note that the Sparkfun version of the 5110 has a different pinout
 * than the Adafruit one, but both use the same PCD8544 controller
 * so are fully compatible otherwise.
 *
 * Author: David Bryant (david@orangemoose.com)
 */
 
#include <SPI.h>
#include <Adafruit_GFX.h>
#include <Adafruit_PCD8544.h>

#define LCD_CLK 10    // Serial clock out (SCLK)
#define LCD_MOSI 9    // Serial data out to LCD (DN/MOSI)
#define LCD_DC 11     // Data/Command select (D/C)
#define LCD_CS 12     // LCD chip select (CS or SCE)
#define LCD_RESET 13  // LCD reset (RST)
Adafruit_PCD8544 display(LCD_CLK, LCD_MOSI, LCD_DC, LCD_CS, LCD_RESET);

#define BL_PIN 6  // Backlight control pin

#define LOGO_WIDTH  64
#define LOGO_HEIGHT 48
#define LCD_WIDTH   84   // Needs to be >= LOGO_WIDTH
#define LCD_HEIGHT  48   // Needs to be >= LOGO_HEIGHT

static const unsigned char PROGMEM orangemoose[(LOGO_WIDTH * LOGO_HEIGHT)/8] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  /* 1 */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x93, 0x00, 0x00, 0xC9, 0x00, 0x00,  /* 8 */

0x00, 0x01, 0xF7, 0x00, 0x00, 0xEF, 0x80, 0x00,
0x00, 0x0F, 0xFF, 0x10, 0x08, 0xFF, 0xF0, 0x00,
0x00, 0x07, 0xFF, 0x38, 0x1C, 0XFF, 0xE0, 0x00, 
0x00, 0x07, 0xFF, 0xB0, 0x0D, 0xFF, 0xE0, 0x00,
0x00, 0x1F, 0xFF, 0xB0, 0x0D, 0xFF, 0xF8, 0x00,
0x00, 0x0F, 0xFF, 0xF8, 0x1F, 0xFF, 0xF0, 0x00,
0x00, 0x07, 0xFF, 0xFC, 0x3F, 0xFF, 0xE0, 0x00,
0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x00,  /* 16 */

0x00, 0x1F, 0xFF, 0x8F, 0xF1, 0xFF, 0xF8, 0x00,
0x00, 0x1F, 0xFE, 0x7D, 0xBE, 0x7F, 0xF8, 0x00,
0x00, 0x07, 0xF8, 0x79, 0x9E, 0x1F, 0xE0, 0x00,
0x00, 0x00, 0x00, 0x1F, 0xF8, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x1F, 0xF8, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x00, 0x00,  /* 24 */

0x00, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x73, 0xCE, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x31, 0x8C, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x1F, 0xF8, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  /* 32 */

0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  /* 40 */

0x45, 0x67, 0x2C, 0x79, 0xCD, 0x18, 0xC7, 0x1C,
0x45, 0x90, 0xB2, 0x8A, 0x2A, 0xA5, 0x28, 0x22,
0x45, 0x07, 0xA2, 0x8B, 0xEA, 0xA5, 0x27, 0x3E,
0x45, 0x08, 0xA2, 0x7A, 0x08, 0xA5, 0x20, 0xA0,
0x39, 0x07, 0xA2, 0x09, 0xC8, 0x98, 0xCF, 0x1C,
0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  /* 48 */
};
 
void setup()
{ 
  display.begin();          // Initialize the display
  display.setContrast(50);  // Set contrast, 50 works well
  analogWrite(BL_PIN,250);  // Turn backlight LEDs on (bright!)

  // Clear the display buffer before enabling it so it
  // doesn't show the splashscreen built into the Adafruit
  // library (Adafruit logo)
  display.clearDisplay(); 
 
  // draw our logo bitmap, centered
  display.drawBitmap((LCD_WIDTH - LOGO_WIDTH)/2,(LCD_HEIGHT - LOGO_HEIGHT)/2,
    orangemoose,LOGO_WIDTH,LOGO_HEIGHT,BLACK);
  display.display();   // Now enable & show the display
  
  randomSeed(analogRead(A0));   // Randomize
}


void loop()
{ 
  // Fade the backlight LEDs on and off...
  for (int j=0; j<2; j++)
  {
    for (int i=255; i>=0; i-=5)
    {
      analogWrite(BL_PIN, i); // blPin is ocnnected to BL LED
      delay(40);
    }
    for (int i=0; i<256; i+=5)
    {
      analogWrite(BL_PIN, i);
      delay(40);
    }
  }
  // Now move the bitmap around (as much as possible)
  display.clearDisplay();
  display.drawBitmap(random(0,(LCD_WIDTH-LOGO_WIDTH)), random(0,(LCD_HEIGHT-LOGO_HEIGHT)),
    orangemoose,LOGO_WIDTH,LOGO_HEIGHT, BLACK);
  display.display();
}
